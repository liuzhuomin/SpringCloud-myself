package liuzhuomin.cloud.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.client.loadbalancer.LoadBalanced;
import org.springframework.cloud.netflix.zuul.filters.Route;
import org.springframework.cloud.netflix.zuul.filters.RouteLocator;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.web.client.RestTemplate;
import springfox.documentation.swagger.web.SwaggerResource;
import springfox.documentation.swagger.web.SwaggerResourcesProvider;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

/**
 * 配置swaggerApi的访问权限
 *
 * @author Jihy
 * @since 2019-07-01 14:17
 */
@Configuration
@Primary
@EnableSwagger2
public class DocumentationConfig implements SwaggerResourcesProvider {

    @Bean
    @LoadBalanced
    RestTemplate initRestTemplate() {
        return new RestTemplate();
    }

    @Autowired
    RouteLocator routeLocator;

    @Override
    public List<SwaggerResource> get() {
        List resources = new ArrayList();
        System.out.println("处理化getDocumentationConfig");
        resources.add(swaggerResource("项目入驻", "/projectIn/*", "1.0"));
        resources.add(swaggerResource("载体备案", "/carrier/*", "1.0"));
        resources.add(swaggerResource("活动通知", "/notification/*", "1.0"));
        for (Route route : routeLocator.getRoutes()) {
            resources.add(
                    swaggerResource(route.getId(), route.getFullPath().replace("**", "v2/api-docs"), "1.0"));
        }
        return resources;
    }

    private SwaggerResource swaggerResource(String name, String location, String version) {
        SwaggerResource swaggerResource = new SwaggerResource();
        swaggerResource.setName(name);
        swaggerResource.setLocation(location);
        swaggerResource.setSwaggerVersion(version);
        return swaggerResource;
    }
}
