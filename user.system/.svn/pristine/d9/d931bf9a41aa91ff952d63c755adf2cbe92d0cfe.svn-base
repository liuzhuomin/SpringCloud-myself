package liuzhuomin.cloud.util;

import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.joda.time.DateTime;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.Minutes;
import org.joda.time.Months;

public class DateUtil {

    private DateUtil() {
    }

    public static void main(String[] args) {
        ParsePosition pos = new ParsePosition(8);
        String a = "2019-07-01 10:59:40";
        String b = getDateTimeHint(stringToDate(a));
        System.out.println(b);
    }

    public static String getDateHint(Date date) {
        if (date == null) {
            return null;
        }
        DateTime target = new DateTime(date).withTime(0, 0, 0, 0);
        DateTime now = new DateTime().withTime(0, 0, 0, 0);

        int diffMonths = Months.monthsBetween(target, now).getMonths();
        if (diffMonths > 0) {
            return diffMonths + "个月前（已过期）";
        } else if (diffMonths < 0) {
            return (-diffMonths) + "个月后";
        }
        int diffDays = Days.daysBetween(target, now).getDays();
        if (diffDays > 1) {
            return diffDays + "天前（已过期）";
        } else if (diffDays == 1) {
            return "昨天（已过期）";
        } else if (diffDays == 0) {
            return "今天";
        } else if (diffDays == -1) {
            return "明天";
        } else {
            return (-diffDays) + "天后";
        }
    }

    public static String getDateTimeHint(Date date) {
        if (date == null) {
            return null;
        }
        DateTime target = new DateTime(date);
        DateTime now = new DateTime();

        int diffMonths = Months.monthsBetween(target, now).getMonths();
        if (diffMonths > 0) {
            return diffMonths + "个月前";
        }
        int diffDays = Days.daysBetween(target, now).getDays();
        if (diffDays > 0) {
            return diffDays + "天前";
        }
        int diffHours = Hours.hoursBetween(target, now).getHours();
        if (diffHours > 0) {
            return diffHours + "小时前";
        }
        int diffMinutes = Minutes.minutesBetween(target, now).getMinutes();
        if (diffMinutes > 0) {
            return diffMinutes + "分钟前";
        }
        return "刚刚";
    }


    public static String stampToDate(String s) {
        String res;
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date(Long.parseLong(s) * 1000);
        res = simpleDateFormat.format(date);
        return res;
    }

    public static Date stringToDate(String time) {
        SimpleDateFormat formatter;
        int tempPos = time.indexOf("AD");
        time = time.trim();
        formatter = new SimpleDateFormat("yyyy.MM.dd G 'at' hh:mm:ss z");
        if (tempPos > -1) {
            time = time.substring(0, tempPos) +
                    "公元" + time.substring(tempPos + "AD".length());//china
            formatter = new SimpleDateFormat("yyyy.MM.dd G 'at' hh:mm:ss z");
        }
        tempPos = time.indexOf("-");
        if (tempPos > -1 && (time.indexOf(" ") < 0)) {
            formatter = new SimpleDateFormat("yyyyMMddHHmmssZ");
        } else if ((time.indexOf("/") > -1) && (time.indexOf(" ") > -1)) {
            formatter = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        } else if ((time.indexOf("-") > -1) && (time.indexOf(" ") > -1)) {
            formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        } else if ((time.indexOf("/") > -1) && (time.indexOf("am") > -1) || (time.indexOf("pm") > -1)) {
            formatter = new SimpleDateFormat("yyyy-MM-dd KK:mm:ss a");
        } else if ((time.indexOf("-") > -1) && (time.indexOf("am") > -1) || (time.indexOf("pm") > -1)) {
            formatter = new SimpleDateFormat("yyyy-MM-dd KK:mm:ss a");
        }
        ParsePosition pos = new ParsePosition(0);
        Date ctime = formatter.parse(time, pos);

        return ctime;
    }
}
